<?php

/**
 * PluginmdCart
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginmdCart extends BasemdCart
{
  const COOKIE_CART_NAME = '__MD_CAR';
  
  const MD_CART_NAMESPACE = 'mdCart';
  
  public function orderExists(){
    return Doctrine::getTable('mdOrder')->findOneBy('md_cart_id', $this->getId());
  }
  
  public function getQuantity(){
    $cartItems = $this->getMdCartProducts();
    
    if(!$cartItems) return 0;

    $qty = 0;
    foreach($cartItems as $cartItem){
      $qty+= $cartItem->getQuantity();
    }
    
    return $qty;
  }
  
  public function getSubTotal(){
    // Calculamos total de los productos
    $cartItems = $this->getMdCartProducts();
    
    if(!$cartItems) return 0;

    $total = 0;
    foreach($cartItems as $cartItem){
      $ecProduct = $cartItem->getEcProduct();
      $total+= $ecProduct->getTotal($cartItem->getQuantity());
    }
    
    return $total;
  }
  
  public function getDisplaySubTotal(){
    return Tools::displayPrice((float)$this->getSubTotal());
  }
  
  public function getTotal(){
    // costo productos + costo envio
    $total = $this->getSubTotal() + $this->getTotalShipping();  
    
    return $total;
  }
  
  public function getDisplayTotal(){
    return Tools::displayPrice((float)$this->getTotal());
  }
  
  public function getTotalShipping(){
    $total = 0;
    
    // Calculamos total del costo de envio
    if($this->getCarrierId() != NULL){
      $mdCarrier = Doctrine::getTable('mdCarrier')->find($this->getCarrierId());
      $total+= $mdCarrier->getTotal();
    }
    
    return $total;
  }
  
  public function getDisplayTotalShipping(){
    return Tools::displayPrice((float)$this->getTotalShipping());
  }  
  
  // Tuve que hacer este getter porque en el schema no lo defini como clave foranea
  public function getShippingData(){
    return Doctrine::getTable('mdAddress')->find($this->getAddressDeliveryId());
  }
}
